// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Ef7Playground.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;

namespace Ef7Playground.Models.Configurations
{
    public partial class ElementConfiguration : IEntityTypeConfiguration<Element>
    {
        public void Configure(EntityTypeBuilder<Element> entity)
        {
            entity.ToTable("Element");

            entity.Property(e => e.Id)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("id");

            entity.Property(e => e.Title)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("title");

            entity.HasMany(d => d.Children)
                .WithMany(p => p.Parents)
                .UsingEntity<Dictionary<string, object>>(
                    "Relation",
                    l => l.HasOne<Element>().WithMany().HasForeignKey("ChildId").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Relation_Element_child"),
                    r => r.HasOne<Element>().WithMany().HasForeignKey("ParentId").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Relation_Element_parent"),
                    j =>
                    {
                        j.HasKey("ParentId", "ChildId");

                        j.ToTable("Relation");

                        j.IndexerProperty<string>("ParentId").HasMaxLength(50).IsUnicode(false).HasColumnName("parentId");

                        j.IndexerProperty<string>("ChildId").HasMaxLength(50).IsUnicode(false).HasColumnName("childId");
                    });

            entity.HasMany(d => d.Parents)
                .WithMany(p => p.Children)
                .UsingEntity<Dictionary<string, object>>(
                    "Relation",
                    l => l.HasOne<Element>().WithMany().HasForeignKey("ParentId").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Relation_Element_parent"),
                    r => r.HasOne<Element>().WithMany().HasForeignKey("ChildId").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_Relation_Element_child"),
                    j =>
                    {
                        j.HasKey("ParentId", "ChildId");

                        j.ToTable("Relation");

                        j.IndexerProperty<string>("ParentId").HasMaxLength(50).IsUnicode(false).HasColumnName("parentId");

                        j.IndexerProperty<string>("ChildId").HasMaxLength(50).IsUnicode(false).HasColumnName("childId");
                    });

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Element> entity);
    }
}
